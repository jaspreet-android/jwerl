{erl_opts, [debug_info, warn_export_vars, warn_shadow_vars, warn_obsolete_guard]}.

{plugins, [
           rebar3_elixir,
           {rebar3_hex, {git, "https://github.com/erlef/rebar3_hex.git", {ref, "9de70d8"}}},
           rebar3_lint
          ]}.
{elixir_bindings, [jwerl]}.

{deps, [
        {jsx, "~> 2.8.2"}
       ]}.

{eunit_opts, [
              verbose, {report, {eunit_surefire, [{dir, "test/eunit"}]}}
             ]}.

{pre_hooks,
 [{eunit, "mkdir -p test/eunit"}]}.

{profiles, [
            {docs, [
                    {deps, [
                            {edown, {git, "https://github.com/botsunit/edown.git", {branch, "master"}}}
                           ]},
                    {edoc_opts, [
                                 {doclet, edown_doclet}
                                 , {app_default, "http://www.erlang.org/doc/man"}
                                 , {source_path, ["src"]}
                                 , {overview, "overview.edoc"}
                                 , {stylesheet, ""}
                                 , {image, ""}
                                 , {top_level_readme, {"./README.md", "https://github.com/emedia-project/jwerl"}}
                                ]}
                   ]}
           ]}.

{elvis,
 [#{dirs => ["src", "test"],
    filter => "*.erl",
    rules => [{elvis_style, line_length, #{limit => 180}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names},
              {elvis_style, macro_module_names},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 25}},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}}]},
  #{dirs => ["."],
    filter => "rebar.config",
    rules => [{elvis_project, no_deps_master_rebar, []}]}]}.

{xref_warnings, false}.
{xref_extra_paths, []}.
{xref_checks, [undefined_function_calls
               , undefined_functions
               , locals_not_used
               %               , exports_not_used
               , deprecated_function_calls
               , deprecated_functions]}.

{dialyzer, [{plt_prefix, "jwerl"}]}.

